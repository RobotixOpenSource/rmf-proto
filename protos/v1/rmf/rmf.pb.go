// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.6.1
// source: protos/rcc/v1/rmf.proto

package rmf

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type AuthReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token        string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Organization string `protobuf:"bytes,2,opt,name=organization,proto3" json:"organization,omitempty"`
}

func (x *AuthReq) Reset() {
	*x = AuthReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_rcc_v1_rmf_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthReq) ProtoMessage() {}

func (x *AuthReq) ProtoReflect() protoreflect.Message {
	mi := &file_protos_rcc_v1_rmf_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthReq.ProtoReflect.Descriptor instead.
func (*AuthReq) Descriptor() ([]byte, []int) {
	return file_protos_rcc_v1_rmf_proto_rawDescGZIP(), []int{0}
}

func (x *AuthReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *AuthReq) GetOrganization() string {
	if x != nil {
		return x.Organization
	}
	return ""
}

type AuthResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *AuthResponse) Reset() {
	*x = AuthResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_rcc_v1_rmf_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthResponse) ProtoMessage() {}

func (x *AuthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_rcc_v1_rmf_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthResponse.ProtoReflect.Descriptor instead.
func (*AuthResponse) Descriptor() ([]byte, []int) {
	return file_protos_rcc_v1_rmf_proto_rawDescGZIP(), []int{1}
}

func (x *AuthResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type HealthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *HealthRequest) Reset() {
	*x = HealthRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_rcc_v1_rmf_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthRequest) ProtoMessage() {}

func (x *HealthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_rcc_v1_rmf_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthRequest.ProtoReflect.Descriptor instead.
func (*HealthRequest) Descriptor() ([]byte, []int) {
	return file_protos_rcc_v1_rmf_proto_rawDescGZIP(), []int{2}
}

func (x *HealthRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type HealthResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId string `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (x *HealthResponse) Reset() {
	*x = HealthResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_rcc_v1_rmf_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthResponse) ProtoMessage() {}

func (x *HealthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_rcc_v1_rmf_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthResponse.ProtoReflect.Descriptor instead.
func (*HealthResponse) Descriptor() ([]byte, []int) {
	return file_protos_rcc_v1_rmf_proto_rawDescGZIP(), []int{3}
}

func (x *HealthResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

type ConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConfigRequest) Reset() {
	*x = ConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_rcc_v1_rmf_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigRequest) ProtoMessage() {}

func (x *ConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_rcc_v1_rmf_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigRequest.ProtoReflect.Descriptor instead.
func (*ConfigRequest) Descriptor() ([]byte, []int) {
	return file_protos_rcc_v1_rmf_proto_rawDescGZIP(), []int{4}
}

type ConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FleetConfig string `protobuf:"bytes,1,opt,name=fleet_config,json=fleetConfig,proto3" json:"fleet_config,omitempty"`
	MapConfig   string `protobuf:"bytes,2,opt,name=map_config,json=mapConfig,proto3" json:"map_config,omitempty"`
	MapImageUrl string `protobuf:"bytes,3,opt,name=map_image_url,json=mapImageUrl,proto3" json:"map_image_url,omitempty"`
}

func (x *ConfigResponse) Reset() {
	*x = ConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_rcc_v1_rmf_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigResponse) ProtoMessage() {}

func (x *ConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_rcc_v1_rmf_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigResponse.ProtoReflect.Descriptor instead.
func (*ConfigResponse) Descriptor() ([]byte, []int) {
	return file_protos_rcc_v1_rmf_proto_rawDescGZIP(), []int{5}
}

func (x *ConfigResponse) GetFleetConfig() string {
	if x != nil {
		return x.FleetConfig
	}
	return ""
}

func (x *ConfigResponse) GetMapConfig() string {
	if x != nil {
		return x.MapConfig
	}
	return ""
}

func (x *ConfigResponse) GetMapImageUrl() string {
	if x != nil {
		return x.MapImageUrl
	}
	return ""
}

var File_protos_rcc_v1_rmf_proto protoreflect.FileDescriptor

var file_protos_rcc_v1_rmf_proto_rawDesc = []byte{
	0x0a, 0x17, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x72, 0x63, 0x63, 0x2f, 0x76, 0x31, 0x2f,
	0x72, 0x6d, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x72, 0x63, 0x63, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x22, 0x43, 0x0a, 0x07, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x75,
	0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x1f, 0x0a, 0x0d, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x2f, 0x0a, 0x0e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x64, 0x22, 0x0f, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x76, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x6c, 0x65, 0x65, 0x74,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66,
	0x6c, 0x65, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61,
	0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6d, 0x61, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x22, 0x0a, 0x0d, 0x6d, 0x61, 0x70,
	0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x6d, 0x61, 0x70, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x32, 0xe2, 0x01,
	0x0a, 0x0c, 0x52, 0x6d, 0x66, 0x52, 0x63, 0x63, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x12, 0x3f,
	0x0a, 0x0c, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x13,
	0x2e, 0x72, 0x63, 0x63, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x41, 0x75, 0x74, 0x68,
	0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x72, 0x63, 0x63, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x4a, 0x0a, 0x0b, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x19,
	0x2e, 0x72, 0x63, 0x63, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x48, 0x65, 0x61, 0x6c,
	0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x72, 0x63, 0x63, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x12, 0x45, 0x0a, 0x0a, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x19, 0x2e, 0x72, 0x63, 0x63, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x72, 0x63, 0x63, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x42, 0x36, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x69, 0x78, 0x4f, 0x70, 0x65, 0x6e, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x2f, 0x72, 0x6d, 0x66, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x6d, 0x66, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_protos_rcc_v1_rmf_proto_rawDescOnce sync.Once
	file_protos_rcc_v1_rmf_proto_rawDescData = file_protos_rcc_v1_rmf_proto_rawDesc
)

func file_protos_rcc_v1_rmf_proto_rawDescGZIP() []byte {
	file_protos_rcc_v1_rmf_proto_rawDescOnce.Do(func() {
		file_protos_rcc_v1_rmf_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_rcc_v1_rmf_proto_rawDescData)
	})
	return file_protos_rcc_v1_rmf_proto_rawDescData
}

var file_protos_rcc_v1_rmf_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_protos_rcc_v1_rmf_proto_goTypes = []interface{}{
	(*AuthReq)(nil),        // 0: rcc_protos.AuthReq
	(*AuthResponse)(nil),   // 1: rcc_protos.AuthResponse
	(*HealthRequest)(nil),  // 2: rcc_protos.HealthRequest
	(*HealthResponse)(nil), // 3: rcc_protos.HealthResponse
	(*ConfigRequest)(nil),  // 4: rcc_protos.ConfigRequest
	(*ConfigResponse)(nil), // 5: rcc_protos.ConfigResponse
}
var file_protos_rcc_v1_rmf_proto_depIdxs = []int32{
	0, // 0: rcc_protos.RmfRccBridge.Authenticate:input_type -> rcc_protos.AuthReq
	2, // 1: rcc_protos.RmfRccBridge.HealthCheck:input_type -> rcc_protos.HealthRequest
	4, // 2: rcc_protos.RmfRccBridge.ConfigData:input_type -> rcc_protos.ConfigRequest
	1, // 3: rcc_protos.RmfRccBridge.Authenticate:output_type -> rcc_protos.AuthResponse
	3, // 4: rcc_protos.RmfRccBridge.HealthCheck:output_type -> rcc_protos.HealthResponse
	5, // 5: rcc_protos.RmfRccBridge.ConfigData:output_type -> rcc_protos.ConfigResponse
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_protos_rcc_v1_rmf_proto_init() }
func file_protos_rcc_v1_rmf_proto_init() {
	if File_protos_rcc_v1_rmf_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protos_rcc_v1_rmf_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_rcc_v1_rmf_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_rcc_v1_rmf_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_rcc_v1_rmf_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_rcc_v1_rmf_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_rcc_v1_rmf_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_rcc_v1_rmf_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protos_rcc_v1_rmf_proto_goTypes,
		DependencyIndexes: file_protos_rcc_v1_rmf_proto_depIdxs,
		MessageInfos:      file_protos_rcc_v1_rmf_proto_msgTypes,
	}.Build()
	File_protos_rcc_v1_rmf_proto = out.File
	file_protos_rcc_v1_rmf_proto_rawDesc = nil
	file_protos_rcc_v1_rmf_proto_goTypes = nil
	file_protos_rcc_v1_rmf_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RmfRccBridgeClient is the client API for RmfRccBridge service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RmfRccBridgeClient interface {
	Authenticate(ctx context.Context, in *AuthReq, opts ...grpc.CallOption) (*AuthResponse, error)
	HealthCheck(ctx context.Context, opts ...grpc.CallOption) (RmfRccBridge_HealthCheckClient, error)
	ConfigData(ctx context.Context, in *ConfigRequest, opts ...grpc.CallOption) (*ConfigResponse, error)
}

type rmfRccBridgeClient struct {
	cc grpc.ClientConnInterface
}

func NewRmfRccBridgeClient(cc grpc.ClientConnInterface) RmfRccBridgeClient {
	return &rmfRccBridgeClient{cc}
}

func (c *rmfRccBridgeClient) Authenticate(ctx context.Context, in *AuthReq, opts ...grpc.CallOption) (*AuthResponse, error) {
	out := new(AuthResponse)
	err := c.cc.Invoke(ctx, "/rcc_protos.RmfRccBridge/Authenticate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rmfRccBridgeClient) HealthCheck(ctx context.Context, opts ...grpc.CallOption) (RmfRccBridge_HealthCheckClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RmfRccBridge_serviceDesc.Streams[0], "/rcc_protos.RmfRccBridge/HealthCheck", opts...)
	if err != nil {
		return nil, err
	}
	x := &rmfRccBridgeHealthCheckClient{stream}
	return x, nil
}

type RmfRccBridge_HealthCheckClient interface {
	Send(*HealthRequest) error
	Recv() (*HealthResponse, error)
	grpc.ClientStream
}

type rmfRccBridgeHealthCheckClient struct {
	grpc.ClientStream
}

func (x *rmfRccBridgeHealthCheckClient) Send(m *HealthRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *rmfRccBridgeHealthCheckClient) Recv() (*HealthResponse, error) {
	m := new(HealthResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *rmfRccBridgeClient) ConfigData(ctx context.Context, in *ConfigRequest, opts ...grpc.CallOption) (*ConfigResponse, error) {
	out := new(ConfigResponse)
	err := c.cc.Invoke(ctx, "/rcc_protos.RmfRccBridge/ConfigData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RmfRccBridgeServer is the server API for RmfRccBridge service.
type RmfRccBridgeServer interface {
	Authenticate(context.Context, *AuthReq) (*AuthResponse, error)
	HealthCheck(RmfRccBridge_HealthCheckServer) error
	ConfigData(context.Context, *ConfigRequest) (*ConfigResponse, error)
}

// UnimplementedRmfRccBridgeServer can be embedded to have forward compatible implementations.
type UnimplementedRmfRccBridgeServer struct {
}

func (*UnimplementedRmfRccBridgeServer) Authenticate(context.Context, *AuthReq) (*AuthResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Authenticate not implemented")
}
func (*UnimplementedRmfRccBridgeServer) HealthCheck(RmfRccBridge_HealthCheckServer) error {
	return status.Errorf(codes.Unimplemented, "method HealthCheck not implemented")
}
func (*UnimplementedRmfRccBridgeServer) ConfigData(context.Context, *ConfigRequest) (*ConfigResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ConfigData not implemented")
}

func RegisterRmfRccBridgeServer(s *grpc.Server, srv RmfRccBridgeServer) {
	s.RegisterService(&_RmfRccBridge_serviceDesc, srv)
}

func _RmfRccBridge_Authenticate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RmfRccBridgeServer).Authenticate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rcc_protos.RmfRccBridge/Authenticate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RmfRccBridgeServer).Authenticate(ctx, req.(*AuthReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RmfRccBridge_HealthCheck_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(RmfRccBridgeServer).HealthCheck(&rmfRccBridgeHealthCheckServer{stream})
}

type RmfRccBridge_HealthCheckServer interface {
	Send(*HealthResponse) error
	Recv() (*HealthRequest, error)
	grpc.ServerStream
}

type rmfRccBridgeHealthCheckServer struct {
	grpc.ServerStream
}

func (x *rmfRccBridgeHealthCheckServer) Send(m *HealthResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *rmfRccBridgeHealthCheckServer) Recv() (*HealthRequest, error) {
	m := new(HealthRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _RmfRccBridge_ConfigData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RmfRccBridgeServer).ConfigData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rcc_protos.RmfRccBridge/ConfigData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RmfRccBridgeServer).ConfigData(ctx, req.(*ConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RmfRccBridge_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rcc_protos.RmfRccBridge",
	HandlerType: (*RmfRccBridgeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Authenticate",
			Handler:    _RmfRccBridge_Authenticate_Handler,
		},
		{
			MethodName: "ConfigData",
			Handler:    _RmfRccBridge_ConfigData_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "HealthCheck",
			Handler:       _RmfRccBridge_HealthCheck_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "protos/rcc/v1/rmf.proto",
}
